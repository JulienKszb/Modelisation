import numpy as npimport matplotlib.pyplot as pltfrom sklearn import svm# Jeu de donn√©esX=np.array([[2,2],[3,4],[2,5],[6,6],[1,7],[5,7],[3,8],[7,9],[9,9],[5,10],[7,1],[11,1],[9,3],[14,3],[12,4],[15,4],[13,6],[15,7]])n=np.shape(X)[0]p=np.shape(X)[1]# Classe des pointsy=np.array([-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1,1,1,1,1,1,1,1])for i in range(1000):    plt.scatter(X[:, 0], X[:, 1], c=y, s=30, cmap=plt.cm.Paired)    model = svm.LinearSVC(C=1, max_iter=i)    model.fit(X, y)        ax = plt.gca()    xlim = ax.get_xlim()    ylim = ax.get_ylim()        xx = np.linspace(xlim[0]-4, xlim[1]+1, 50)    yy = np.linspace(ylim[0]-4, ylim[1]+1, 50)    YY, XX = np.meshgrid(yy, xx)    xy = np.vstack([XX.ravel(), YY.ravel()]).T    Z = model.decision_function(xy).reshape(XX.shape)        ax.contour(XX, YY, Z, colors='k', levels=[-1,0,+1], alpha=0.5,linestyles=['--', '-', '--'])    #ax.scatter(model.support_vectors_[:, 0], model.support_vectors_[:, 1], s=100,linewidth=1, facecolors='none', edgecolors='k')    plt.show()